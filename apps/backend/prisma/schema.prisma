// Prisma schema for backend chat application
// SQLite for development

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Channel {
  id              String    @id @default(cuid())
  name            String    @unique
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  isPrivate       Boolean   @default(false)
  deletedAt       DateTime?
  archivedAt      DateTime?
  createdByUserId String? // Placeholder until users implemented
  // memberships  ChannelMember[]
  // In future: messages, memberships, workspace relation, etc.
}

// Future user model placeholder (not enforced yet)
// model User {
//   id        String   @id @default(cuid())
//   email     String   @unique
//   name      String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   memberships ChannelMember[]
// }

// model ChannelMember {
//   id         String   @id @default(cuid())
//   channelId  String
//   userId     String
//   role       String   @default("MEMBER") // Could be enum in future
//   joinedAt   DateTime @default(now())
//   channel    Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
//   user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   @@unique([channelId, userId])
// }
